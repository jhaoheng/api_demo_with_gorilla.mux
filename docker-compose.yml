version: "3.8"
services:

  nginx:
    image: nginx:1.21.1
    container_name: nginx
    depends_on:
      app:
        condition: service_healthy
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
      - 443:443
    networks:
      - api_network

  app:
    image: golang:1.17.11
    container_name: app
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - db_host=mysql
      - csrftoken_only_https=false
    ports:
      - 8080:8080/tcp
    volumes:
      - ./go.mod:/go/src/app/go.mod
      - ./go.sum:/go/src/app/go.sum
      - ./app:/go/src/app/app
      - ./vendor:/go/src/app/vendor
      - ./keypair:/tmp/localhost/docker-compose/keypair
    working_dir : /go/src/app
    tty: true
    command: sh -c "cd app && go run main.go"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 2s
      timeout: 10s
      retries: 10
    restart: always
    networks:
      - api_network

  mysql:
    image: mariadb:10.7.3
    container_name: mysql
    ports:
      - 3306:3306
    volumes:
      - ./mysql:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: my_side_project
      MYSQL_USER: test
      MYSQL_PASSWORD: test
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -P 3306 -proot | grep 'mysqld is alive' || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - api_network

networks:
  api_network:
    name: api_network